+++
draft = false
outputs = "Reveal"
+++

## Программирование на языке JavaScript {#программирование-на-языке-javascript}

---


### Занятие №1 {#занятие-1}

Общие сведения

---

Какие знания и умения необходимы для овладения программированием?

---

-   Математические знания
-   Владение навыками алгоритмического мышления
-   Владение ИКТ
    -   Компьютером
    -   Интернетом
-   Владение английским языком

---


#### Какими бывают языки программирования? {#какими-бывают-языки-программирования}

Языки программирования:

-   компилируемые
-   интерпретируемые

---
Компилируемые языки:

Исходный код → исполняемый код → исполнение

Среди них:

-   C
-   C++
-   Go
-   Rust

---

Интерпретируемые языки:

Исходный код → исполнение (интерпретатором)

Среди них:

-   Python
-   Bash
-   PHP

---

Как вы думаете, к каким относится JavaScript?

---

JavaScript &mdash; интерпретируемый язык

---

Короткие программы на интерпретируемых языках называют _скриптами_

---


#### Область применения {#область-применения}

{{% section %}}


#### Веб {#веб}

Браузеры

-   Mozilla Firefox
-   Google Chrome
-   и др.

---

-   MongoDB
-   LibreOffice
-   Node.js
-   Electron
    -   VSCode
    -   Twitch App для Windows
    -   Discord

{{% /section %}}

---


#### Эволюция языка {#эволюция-языка}

Стандарт ECMAScript (ES)

-   ES1 &mdash; 1997
-   &hellip;
-   ES5 &mdash; 2009
-   ES6 &mdash; 2015 (ES2015)
-   ES7 &mdash; 2016 (ES2016)
-   &hellip;
-   ES2019 (10-й по счету)

---


#### Структура программ {#структура-программ}

{{% section %}}
значения + операторы → выражения → инструкции

---

Примеры значений:

-   `1`
-   `2.5`
-   `false`
-   `"Строка"`

---

| Выражения                                               | Инструкции                                                                                                                                                             |
|---------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Выражение &mdash; фрагмент кода, возвращающий значение. | Инструкция &mdash; фрагмент кода, состоящий из выражений. Инструкции отделяются знаком `;` . Простейший пример инструкции &mdash; выражение и `;` после него: `false;` |

{{% /section %}}

---


#### Типы данных {#типы-данных}

{{% section %}}
Разновидности значений

---

Булевский или логический

Значений этого типа всего 2:

```javascript
true
```

и

```javascript
false
```

---

Численный

Примеры:

```javascript
22
0.25
```

---

Строковый

```javascript
'между кавычками'
"может быть"
`любой текст`
```

---

Существуют также такие типы, как object, array и др. Но о них позже.

{{% /section %}}

---

{{% section %}}


#### Численный тип {#численный-тип}

-    Целые (integer)

    ```javascript
    8
    ```

-    Дробные (fractional)

    ```javascript
    8.5
    ```

    Возможно применений &bdquo;научной&rdquo; записи

    ```javascript
    8.5e4
    // 85000

    8.5e-4
    // 0.00085
    ```

    ---


#### Специальные числа {#специальные-числа}

```javascript
Infinity   \\ Бесконечность
-Infinity  \\ Минус бесконечность
NaN        \\ Не число (Not a Number)
```

{{% /section %}}

---


#### Операторы чисел {#операторы-чисел}

| сложение  | `+` |
|-----------|-----|
| вычитание | `-` |
| умножение | `*` |
| деление   | `/` |

---

Как вы думаете, какие еще есть операторы чисел?

---

Время проверить все это в консоли :computer: !

Нажмите `F12`

---


#### Особенности работы с числами {#особенности-работы-с-числами}

Точность вычислений ограничена.

Рассмотрим примеры в консоли :computer: .

---


#### Переменные (variables) {#переменные--variables}

Создаются с помощью ключевого слова `let`.

```javascript
let x = 1;
let a = 12;
let b = a + 6;
```

`let` &mdash; ES2015. Ранее &mdash; `var`.

---


#### Особенности `let` {#особенности-let}

Попробуйте повторно использовать `x`.

```javascript
let x = 145
// Uncaught SyntaxError: Identifier 'x' has already been declared
//    at <anonymous>:1:1
```

---


#### Функции {#функции}

Вызываются в форме `имяФункции(аргумент(ы))`.

Аргумент &mdash; это то, что посылается на _вход_ функции.
Функция _возвращает_ значение на _выходе_.

аргумент → функция → возвращенное значение

---

Список функций на сегодня:

```javascript
console.log()
typeof()
prompt()
alert()
```

---


#### `console.log()` {#console-dot-log}

Выводит в консоль аргумент(ы).

---


#### `typeof()` {#typeof}

Возвращает тип значения аргумента

---


#### `prompt()` {#prompt}

Возвращает строку, введенную пользователем в специальное окно

Первый аргумент &mdash; строка-сообщение для пользователя.

---


#### `alert()` {#alert}

Выводит аргумент в качестве сообщения для пользователя

---


#### Строки {#строки}

Пример конкатенации (сложения) строк:

```javascript
let s = 'День ';
console.log('Наступил ' + s + 'знаний.');
```

Альтернативный способ. Найдите отличия:

```javascript
console.log('Наступил ', s, 'знаний.');
```

Есть ли разница в результате?

---


#### `''` vs. `""` vs. `` `` `` {#vs-dot-vs-dot}

```javascript
let n = 3;
```

Есть ли разница между:

```javascript
console.log('Произведение n и 7 = ', n*7)
console.log("Произведение n и 7 = ", n*7)
console.log(`Произведение n и 7 = ${n*7} `)
```

---


#### Автоматическое преобразование типов {#автоматическое-преобразование-типов}

```javascript
8 * null
// 0
'5' - 1
// 4
"5" + 1
// 51
"пять" * 2
// NaN
```

---


#### Хранение программ на ПЗУ {#хранение-программ-на-пзу}

Запуск программ:

-   напрямую из консоли
-   из HTML-файла

---

Сохранение программ в файле позволяет запускать их произвольное количество раз, без необходимости их переписывать заново.


#### Задачи {#задачи}

---

№1

Найти и вывести площадь прямоугольника при заданных пользователем ширине и высоте.

---

№2

Найти и вывести  пройденный путь при заданных пользователем скорости и времени.

---

№3

Найти и вывести процент отличников при заданном пользователем их количестве и общем числе учеников.

---

№4

В меншке в 1,5 раза больше сахара, чем в коробке, и в 12,5 раза больше, чем в банке. Сколько сахара в коробке и сколько в банке, если в мешке 37,5 кг сахара.

---

Предложите свою задачу. Решите сами и дайте решить другим. Проверьте их решение.
